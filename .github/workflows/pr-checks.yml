name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '18.x'

jobs:
  lint-check:
    name: Lint Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Lint Frontend
        run: |
          cd FE
          npm ci
          npm run lint

      - name: Lint Backend
        run: |
          cd BE
          npm ci
          npx tsc --noEmit

  test-pr:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Test Backend
        run: |
          cd BE
          npm ci
          npx prisma generate
          npm test
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
          JWT_SECRET: test-secret-key

      - name: Test Frontend
        run: |
          cd FE
          npm ci
          npm test
        env:
          VITE_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          VITE_API_BASE_URL: http://localhost:3000/api

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [lint-check, test-pr]
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build Backend
        run: |
          cd BE
          npm ci
          npx prisma generate
          npm run build

      - name: Build Frontend
        run: |
          cd FE
          npm ci
          npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          VITE_API_BASE_URL: http://localhost:3000/api

      - name: Comment PR
        uses: actions/github-script@v7
        if: success()
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… All checks passed! Build successful.'
            })
