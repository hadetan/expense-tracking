generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  name      String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  expenses  Expense[]
  categories Category[]
  admin     Admin?

  @@index([email])
}

model Admin {
  id        String   @id @default(uuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@index([userId])
}

model Category {
  id        String    @id @default(uuid())
  name      String
  createdBy String
  user      User      @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expenses  Expense[]

  @@unique([name, createdBy])
  @@index([createdBy])
  @@index([name])
}

enum ExpenseStatus {
  PENDING
  APPROVED
  REJECTED
}

model Expense {
  id              String        @id @default(uuid())
  userId          String
  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  amount          Decimal       @db.Decimal(10, 2)
  categoryId      String
  category        Category      @relation(fields: [categoryId], references: [id], onDelete: Restrict)
  description     String
  date            DateTime
  status          ExpenseStatus @default(PENDING)
  rejectionReason String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@index([userId])
  @@index([date])
  @@index([status])
  @@index([categoryId])
}
